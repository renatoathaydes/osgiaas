buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.athaydes.gradle.osgi:osgi-run-core:1.5.2"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6"
    }
}

apply plugin: 'com.athaydes.osgi-run'
apply plugin: 'idea'

allprojects {
    group = 'com.athaydes.osgiaas'
    version = '1.0-SNAPSHOT'

    repositories {
        jcenter()
        mavenLocal()
    }
}

Set parentModules = [ 'modules', 'cli', 'lang', 'infra' ]

def projectProperty = { String name, defaultValue = '' ->
    project.hasProperty( name ) ? project.property( name ) : defaultValue
}

configure( subprojects ) {
    if ( project.name in parentModules ) {
        return // no publishing config for parent modules
    }

    project.afterEvaluate {
        def allSources = sourceSets.main.allSource

        task sourcesJar( type: Jar, dependsOn: 'classes' ) {
            from allSources
            classifier "sources"
            extension "jar"
        }

        task javadocJar( type: Jar ) {
            classifier "javadoc"
            from javadoc
        }

        /* Publishing config */

        artifacts {
            archives javadocJar, sourcesJar
        }

        // add all the info required by Maven Central to the pom
        configure( install.repositories.mavenInstaller ) {
            //repository(url: "file://$buildDir")
            pom.project {
                inceptionYear '2016'
                name project.name
                packaging 'jar'
                description project.description

                url 'https://github.com/renatoathaydes/osgiaas'

                scm {
                    connection 'git@github.com:renatoathaydes/osgiaas.git'
                    developerConnection 'git@github.com:renatoathaydes/osgiaas.git'
                    url 'https://github.com/renatoathaydes/osgiaas'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'renatoathaydes'
                        name 'Renato Athaydes'
                        email 'renato@athaydes.com'
                    }
                }
            }
        }

        apply plugin: 'com.jfrog.bintray'

        bintray {
            user = projectProperty( "bintrayUserName" )
            key = projectProperty( "bintrayApiKey" )
            configurations = [ 'archives' ]
            publish = true
            pkg {
                repo = 'maven'
                name = "osgiaas.${project.name}"
                licenses = [ 'Apache-2.0' ]
                desc = project.description
                vcsUrl = 'https://github.com/renatoathaydes/osgiaas.git'
                websiteUrl = 'https://github.com/renatoathaydes/osgiaas'
                issueTrackerUrl = 'https://github.com/renatoathaydes/osgiaas/issues'
                labels = [ 'osgi', 'cli', 'jvm', 'languages', 'java', 'groovy', 'frege', 'kotlin' ]
                publicDownloadNumbers = true

                //noinspection GroovyAssignabilityCheck
                version {
                    name = project.version
                    vcsTag = project.version
                    gpg {
                        sign = true
                    }
                    mavenCentralSync {
                        sync = true
                        user = projectProperty( 'ossrhUsername' )
                        password = projectProperty( 'ossrhPassword' )
                        close = '1' // '0' to NOT close
                    }
                }
            }

            bintrayUpload.dependsOn build, sourcesJar
        }

    }

}

repositories {
    maven {
        url 'http://www.knopflerfish.org/maven2'
    }
}

dependencies {
    // OSGi framework services
    osgiRuntime 'org.apache.felix:org.apache.felix.scr:2.0.2', {
        exclude group: '*'
    }
    osgiRuntime 'org.apache.felix:org.apache.felix.log:1.0.1', {
        exclude group: '*'
    }

    // OBR CLI commands
    osgiRuntime 'org.apache.felix:org.apache.felix.bundlerepository:2.0.6', {
        exclude group: '*'
    }

    // OSGi container
    osgiMain "org.apache.felix:org.apache.felix.main:5.4.0"

    // Enable Frege as a system library for the Frege command
    systemLib "org.frege-lang:frege-interpreter-core:1.2"
}

// configuration to run all sub-projects in an OSGi environment
runOsgi {
    bundles =
            // uncomment to include the Knopflerfish GUI
            // ['org.knopflerfish.bundle:desktop:5.0.1'] +
            subprojects.findAll {
                !( it.name in parentModules )
            }

    copyManifestTo 'generated-sources/MANIFEST.MF'

    // enable debugging (run gradle -Pdebug)
    def debug = project.hasProperty( 'debug' )

    if ( debug ) {
        // (run gradle -Pdebug -Pu <tasks> to suspend until debugger is attached)
        def suspend = project.hasProperty( 'u' ) ? 'y' : 'n'
        javaArgs = '-agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=' + suspend
    }

    config += [ 'org.osgi.framework.system.packages.extra': 'sun.reflect,jdk.nashorn.api.scripting' ]

    // no OSGi framework bundles should be deployed
    excludedBundles = [ /osgi\..*/, /animal-sniffer.*/ ]
}
