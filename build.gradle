buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.athaydes.gradle.osgi:osgi-run-core:1.5.1"
    }
}

apply plugin: 'com.athaydes.osgi-run'
apply plugin: 'idea'

allprojects {
    group = 'com.athaydes.osgiaas'
    version = '1.0-SNAPSHOT'

    repositories {
        jcenter()
        mavenLocal()
    }
}

repositories {
    maven {
        url 'http://www.knopflerfish.org/maven2'
    }
}

dependencies {
    // OSGi framework services
    osgiRuntime 'org.apache.felix:org.apache.felix.scr:2.0.2', {
        exclude group: '*'
    }
    osgiRuntime 'org.apache.felix:org.apache.felix.log:1.0.1', {
        exclude group: '*'
    }

    // OBR CLI commands
    osgiRuntime 'org.apache.felix:org.apache.felix.bundlerepository:2.0.6', {
        exclude group: '*'
    }

    // OSGi container
    osgiMain "org.apache.felix:org.apache.felix.main:5.4.0"

    // Enable Frege as a system library for the Frege command
    systemLib "org.frege-lang:frege-interpreter-core:1.2"
}

runOsgi {
    bundles =
            // uncomment to include the Knopflerfish GUI
            // ['org.knopflerfish.bundle:desktop:5.0.1'] +
            subprojects.findAll {
                !( it.name in [ 'modules', 'cli', 'lang', 'infra' ] )
            }

    copyManifestTo 'generated-sources/MANIFEST.MF'

    // enable debugging (run gradle -Pdebug)
    def debug = project.hasProperty( 'debug' )

    if ( debug ) {
        // (run gradle -Pdebug -Pu <tasks> to suspend until debugger is attached)
        def suspend = project.hasProperty( 'u' ) ? 'y' : 'n'
        javaArgs = '-agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=' + suspend
    }

    // required by Groovy
    config += [ 'org.osgi.framework.system.packages.extra': 'sun.reflect,jdk.nashorn.api.scripting' ]

    // no OSGi framework bundles should be deployed
    excludedBundles = [ /osgi\..*/, /animal-sniffer.*/ ]
}
